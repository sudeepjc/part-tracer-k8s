
# Create a account on GCP 
# Create a project 
# Add billing info , if not done already
# Create a kubernetes cluster

cd part-tracer-k8s/k8s/local/

kubectl apply -f orgs/storage
kubectl apply -f orgs/pvc_all

kubectl apply -f orgs/airbusOrg
kubectl get pods

kubectl exec -it $(kubectl get pods -l org=airbus,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/airbusOrgRegisterEnroll.sh"

kubectl apply -f orgs/generalOrg
kubectl get pods

kubectl exec -it $(kubectl get pods -l org=general,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/generalOrgRegisterEnroll.sh"


kubectl apply -f orgs/regulatorOrg
kubectl get pods

kubectl exec -it $(kubectl get pods -l org=regulator,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/regulatorOrgRegisterEnroll.sh"

kubectl exec -it $(kubectl get pods -l org=regulator,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/create-artifacts.sh"

kubectl apply -f orgs/orderers
kubectl get pods

kubectl apply -f orgs/peers/airbus
kubectl get pods

kubectl apply -f orgs/peers/general
kubectl get pods

kubectl exec -it $(kubectl get pods -l org=general,type=cli | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/generalCreateChannel.sh"

kubectl exec -it $(kubectl get pods -l org=airbus,type=cli | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/airbusJoinChannel.sh"

kubectl exec -it $(kubectl get pods -l org=general,type=cli | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/packageChainCode.sh"

kubectl exec -it $(kubectl get pods -l org=general,type=cli | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/installChainCode.sh"

kubectl exec -it $(kubectl get pods -l org=airbus,type=cli | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/installChainCode.sh"

kubectl exec -it $(kubectl get pods -l org=general,type=cli | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/commitChainCode.sh"

kubectl apply -f orgs/apps/general
kubectl get pods

kubectl apply -f orgs/apps/airbus
kubectl get pods
___________________________________________________________________________________________________________________
2020-06-25 23:29:38.843 UTC [orderer.common.server] Main -> INFO 356 Beginning to serve requests
2020-06-25 23:29:38.845 UTC [orderer.consensus.etcdraft] apply -> INFO 357 Applied config change to add node 1, current nodes in channel: [1 2 3] channel=system-channel node=3
2020-06-25 23:29:38.845 UTC [orderer.consensus.etcdraft] apply -> INFO 358 Applied config change to add node 2, current nodes in channel: [1 2 3] channel=system-channel node=3
2020-06-25 23:29:38.845 UTC [orderer.consensus.etcdraft] apply -> INFO 359 Applied config change to add node 3, current nodes in channel: [1 2 3] channel=system-channel node=3
2020-06-25 23:29:39.158 UTC [core.comm] ServerHandshake -> ERRO 35a TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress=172.17.0.11:39404
2020-06-25 23:29:39.158 UTC [grpc] handleRawConn -> DEBU 35b grpc: Server.Serve failed to complete security handshake from "172.17.0.11:39404": remote error: tls: bad certificate
2020-06-25 23:29:39.511 UTC [core.comm] ServerHandshake -> ERRO 35c TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress=172.17.0.12:39668
2020-06-25 23:29:39.512 UTC [grpc] handleRawConn -> DEBU 35d grpc: Server.Serve failed to complete security handshake from "172.17.0.12:39668": remote error: tls: bad certificate
2020-06-25 23:29:39.885 UTC [grpc] createTransport -> DEBU 35e grpc: addrConn.createTransport failed to connect to {orderer-regulator-service:7050 0  <nil>}. Err :connection error: desc = "transport: Error while dialing dial tcp 10.111.211.122:7050: connect: connection refused". Reconnecting...
2020-06-25 23:29:39.885 UTC [grpc] HandleSubConnStateChange -> DEBU 35f pickfirstBalancer: HandleSubConnStateChange: 0xc0002c8010, TRANSIENT_FAILURE
2020-06-25 23:29:39.885 UTC [grpc] createTransport -> DEBU 360 grpc: addrConn.createTransport failed to connect to {orderer-general-service:7050 0  <nil>}. Err :connection error: desc = "transport: Error while dialing dial tcp 10.100.39.232:7050: connect: connection refused". Reconnecting...
2020-06-25 23:29:39.886 UTC [grpc] HandleSubConnStateChange -> DEBU 361 pickfirstBalancer: HandleSubConnStateChange: 0xc0001e4010, TRANSIENT_FAILURE
2020-06-25 23:29:40.469 UTC [core.comm] ServerHandshake -> ERRO 362 TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress=172.17.0.11:39416
2020-06-25 23:29:40.469 UTC [grpc] handleRawConn -> DEBU 363 grpc: Server.Serve failed to complete security handshake from "172.17.0.11:39416": remote error: tls: bad certificate
2020-06-25 23:29:40.514 UTC [core.comm] ServerHandshake -> ERRO 364 TLS handshake failed with error remote error: tls: bad certificate server=Orderer remoteaddress=172.17.0.12:39676
2020-06-25 23:29:40.514 UTC [grpc] handleRawConn -> DEBU 365 grpc: Server.Serve failed to complete security handshake from "172.17.0.12:39676": remote error: tls: bad certificate
2020-06-25 23:29:40.886 UTC [grpc] HandleSubConnStateChange -> DEBU 366 pickfirstBalancer: HandleSubConnStateChange: 0xc0002c8010, CONNECTING
2020-06-25 23:29:40.887 UTC [grpc] HandleSubConnStateChange -> DEBU 367 pickfirstBalancer: HandleSubConnStateChange: 0xc0001e4010, CONNECTING

###################
kubectl exec -it $(kubectl get pods -l org=airbus,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/airbusGenerateCryptoMaterial.sh"
###################

###################
kubectl exec -it $(kubectl get pods -l org=general,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/generalGenerateCryptoMaterial.sh"
##################

###################
kubectl exec -it $(kubectl get pods -l org=regulator,component=client | awk 'NR==2 {print $1}') -- bash -c "sh /files/scripts/regulatorGenerateCryptoMaterial.sh"
#############################

###########
kubectl cp ~/part-tracer-k8s/scripts/start-ca-root.sh general-ca-root-deployment-79f67764cd-56qqn:/scripts

kubectl exec -it general-ca-root-deployment-65f65bc495-4rkcl bash

kubectl cp ~/part-tracer-k8s/scripts/start-ca-root.sh general-ca-root-deployment-79f67764cd-56qqn:/scripts
###########

###########
export CHANNEL_NAME=mychannel
export ORDERER_CA_CERT=/var/hyperledger/orderer2/msp/tlscacerts/tlsca.parttracer.com-cert.pem


peer channel create -o orderer2-regulator-service:7050 --ordererTLSHostnameOverride orderer2-regulator-service -c $CHANNEL_NAME -f /var/hyperledger/peer0/data/mychannel.tx --outputBlock /var/hyperledger/peer0/data/mychannel.block --tls --cafile --cafile $ORDERER_CA

peer channel join -b /var/hyperledger/peer0/data/mychannel.block

peer channel update -o orderer2-regulator-service:7050 --ordererTLSHostnameOverride orderer2-regulator-service -c $CHANNEL_NAME -f /var/hyperledger/peer0/data/${CORE_PEER_LOCALMSPID}anchors.tx --tls --cafile $ORDERER_CA

############

bcdedit /set hypervisorlaunchtype off