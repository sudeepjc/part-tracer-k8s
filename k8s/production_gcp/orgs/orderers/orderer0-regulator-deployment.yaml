apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderer0-regulator-deployment
  labels: { component: orderer0, org: regulator }
spec:
  replicas: 1
  selector:
    matchLabels:
      component: orderer0
      org: regulator
  template:
    metadata:
      labels:
        component: orderer0
        org: regulator
    spec:
      volumes:
        - name: network-pv-mount
          persistentVolumeClaim:
            claimName: network-persistent-volume-claim
        - name: regulator-pv-mount
          persistentVolumeClaim:
            claimName: regulator-persistent-volume-claim
      containers:
        - name: orderer0-regulator
          image: hyperledger/fabric-orderer:2.0.1
          workingDir: /var/hyperledger/orderer
          command: ["orderer"]
          ports:
            - containerPort: 7050
          env:
            - name: FABRIC_LOGGING_SPEC
              value: INFO
            - name: ORDERER_GENERAL_LISTENPORT
              value: "7050"
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: "0.0.0.0"
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: file
            - name: ORDERER_GENERAL_GENESISPROFILE
              value: TwoOrgsOrdererGenesis
            - name: ORDERER_GENERAL_SYSTEMCHANNEL
              value: system-channel
            - name: ORDERER_GENERAL_GENESISFILE
              value: /var/hyperledger/orderer0/data/genesis.block
            - name: ORDERER_GENERAL_LOCALMSPID
              value: RegulatorMSP
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: /var/hyperledger/orderer0/msp
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "true"
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: /var/hyperledger/orderer0/tls/server.key
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: /var/hyperledger/orderer0/tls/server.crt
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: "[/var/hyperledger/orderer0/tls/ca.crt]"
            - name: ORDERER_KAFKA_TOPIC_REPLICATIONFACOTR
              value: "1"
            - name: ORDERER_KAFKA_VERBOSE
              value: "true"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
              value: /var/hyperledger/orderer0/tls/server.key
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: /var/hyperledger/orderer0/tls/server.crt
            - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
              value: "[/var/hyperledger/orderer0/tls/ca.crt]"
            - name: ORDERER_OPERATIONS_LISTENADDRESS
              value: "0.0.0.0:8443"
            - name: ORDERER_METRICS_PROVIDER
              value: prometheus
          volumeMounts:
            # - mountPath: /var/hyperledger/production/orderer0
            #   name: host-mount
            #   subPath: state/orderers/orderer0
            - name: network-pv-mount
              mountPath: /var/hyperledger/orderer0/data
              subPath: artifacts/system-genesis-block
            - name: regulator-pv-mount
              mountPath: /var/hyperledger/orderer0/msp
              subPath: state/regulator-ca-client/orderers/orderer0.parttracer.com/msp
            - name: regulator-pv-mount
              mountPath: /var/hyperledger/orderer0/tls
              subPath: state/regulator-ca-client/orderers/orderer0.parttracer.com/tls
